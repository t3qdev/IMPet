<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="MemberSQL">
	

	<!--회원 전체 리스트 -->
	<select id="selectAll" resultType="hashmap">
		<!-- <include refid="seletClass"/> -->
		<![CDATA[		
			     select 
			     	row_number() over(order by 	member_Join_Date) as NO, 
				 	MEMBER_ID,
			        MEMBER_PW, 
			        MEMBER_NAME,
			        MEMBER_NICKNAME,
			        MEMBER_ZIPCODE,
			        MEMBER_ADDRESS,
			        MEMBER_ADDRESS2,
			        MEMBER_NEWZIPCODE,
			        MEMBER_NEWADDRESS,
			        MEMBER_NEWADDRESS2,
			        MEMBER_EMAIL,
			        MEMBER_TEL,
			        MEMBER_ANIMAL_TYPE, 
			        MEMBER_REQUESTS, 
			        MEMBER_USERYN, 
			        MEMBER_ADMIN, 
			        MEMBER_JOIN_DATE, 
			        MEMBER_DEL_DATE
			 from 
			 	Pet_Member 
			 order by 			 
			 	member_Join_Date
		]]>
	</select>
	
	
	<!--회원 특정 범위 리스트 -->
	<select id="selectRangeAll" resultType="hashmap" parameterType="hashmap">
		<!-- <include refid="seletClass"/> -->
		<![CDATA[		
			    
  select a.* from (
  		     select 
			     	row_number() over(order by 	member_Join_Date) as NO, 
				 	MEMBER_ID,
			        MEMBER_PW, 
			        MEMBER_NAME,
			        MEMBER_NICKNAME,
			        MEMBER_ZIPCODE,
			        MEMBER_ADDRESS,
			        MEMBER_ADDRESS2,
			        MEMBER_NEWZIPCODE,
			        MEMBER_NEWADDRESS,
			        MEMBER_NEWADDRESS2,
			        MEMBER_EMAIL,
			        MEMBER_TEL,
			        MEMBER_ANIMAL_TYPE, 
			        MEMBER_REQUESTS, 
			        MEMBER_USERYN, 
			        MEMBER_ADMIN, 
			        MEMBER_JOIN_DATE, 
			        MEMBER_DEL_DATE
			 from 
			 	Pet_Member ) a    
			 where 
			 	a.No between ${PAGING}*( ${PAGINGNO} -1)+1 and ${PAGING}*( ${PAGINGNO} )
			 order by 			 
			 	member_Join_Date
        
		]]>
	</select>
	
	
	<!-- 회원 개인 정보-->
	<select id="selectOne" resultType="hashmap" parameterType="hashmap">
			
		<![CDATA[		
			 select 
			 	* 
			 from 
			 	Pet_Member 
			 where
			 	member_ID = '${MEMBER_ID}'	
			 order by 
			 	member_Join_Date
		]]>
	</select>
	
	
	<!-- 전체 회원 카운터수-->
	<select id="selectMemberCount" resultType="hashmap">
			
		<![CDATA[		
			 select 
			 	count(*) as count 
			 from 
			 	Pet_Member 			
			
		]]>
	</select>
	
	<!-- 카운터 확인-->
	<select id="selectLogInCount" resultType="hashmap" parameterType="hashmap">
			
		<![CDATA[		
			 select 
			 	count(*) as count 
			 from 
			 	Pet_Member 
			 where
			 	member_ID = '${MEMBER_ID}'	and
			 	member_PW = '${MEMBER_PW}'  and MEMBER_USERYN ='Y'
			
		]]>
	</select>
	
	
	<!-- 카운터 확인-->
	<select id="selectIDdistinctCount" resultType="hashmap" parameterType="hashmap">
			
		<![CDATA[		
			 select 
			 	count(*) as count 
			 from 
			 	Pet_Member 
			 where
			 	member_ID = '${MEMBER_ID}'	
			
		]]>
	</select>
	
	
	
	<!-- 로그인 확인-->
	<select id="selectLogInOne" resultType="hashmap" parameterType="hashmap">
			
		<![CDATA[		
			 select 
			 	MEMBER_ID,		MEMBER_PW,		MEMBER_NAME,	MEMBER_NICKNAME, 
					MEMBER_ZIPCODE,	MEMBER_ADDRESS,	MEMBER_ADDRESS2, 
					MEMBER_EMAIL,	MEMBER_TEL,   					 
					MEMBER_ANIMAL_TYPE, 	
				NVL(MEMBER_REQUESTS,''), 
					MEMBER_USERYN, 
					MEMBER_ADMIN, 
					MEMBER_JOIN_DATE			
			 from 
			 	Pet_Member 
			 where
			 	member_ID = '${MEMBER_ID}'	and
			 	member_PW = '${MEMBER_PW}' and MEMBER_USERYN ='Y'
			
		]]>
	</select>
	
	
	<!-- 회원 추가 -->
	<insert id="insert" parameterType="hashmap">
		<![CDATA[
		
			INSERT INTO 
  				PET_MEMBER ( 							
					MEMBER_ID,		MEMBER_PW,		MEMBER_NAME,	MEMBER_NICKNAME, 
					MEMBER_ZIPCODE,	MEMBER_ADDRESS,	MEMBER_ADDRESS2, 
					MEMBER_EMAIL,	MEMBER_TEL,   					 
					MEMBER_ANIMAL_TYPE, 
					MEMBER_REQUESTS, 
					MEMBER_USERYN, 
					MEMBER_ADMIN, 
					MEMBER_JOIN_DATE					
				 ) VALUES (
				 	#{MEMBER_ID},		#{MEMBER_PW},		#{MEMBER_NAME},		#{MEMBER_NICKNAME},
    			 	#{MEMBER_ZIPCODE},	#{MEMBER_ADDRESS},	#{MEMBER_ADDRESS2}, 
				 	#{MEMBER_EMAIL},	#{MEMBER_TEL},
				 	#{MEMBER_ANIMAL_TYPE},					 	
				 	#{MEMBER_REQUESTS},	
				 	#{MEMBER_USERYN},	
				 	#{MEMBER_ADMIN},	
   					sysdate 				 
				 )		
		
		]]>
	</insert>
		
		
	<!-- 회원 수정 -->
	<update id="update" parameterType="hashmap">
		<![CDATA[
			UPDATE 
				PET_MEMBER 
			SET 
				MEMBER_PW = #{MEMBER_PW},
				MEMBER_NAME = #{MEMBER_NAME},
				MEMBER_NICKNAME = #{MEMBER_NICKNAME}, 
				MEMBER_ZIPCODE = #{MEMBER_ZIPCODE},
				MEMBER_ADDRESS = #{MEMBER_ADDRESS},
				MEMBER_ADDRESS2 = #{MEMBER_ADDRESS2}, 
				MEMBER_EMAIL = #{MEMBER_EMAIL},	
				MEMBER_TEL = #{MEMBER_TEL},   					 
				MEMBER_ANIMAL_TYPE = #{MEMBER_ANIMAL_TYPE}, 
				MEMBER_REQUESTS = #{MEMBER_REQUESTS}
			where
				MEMBER_ID = #{MEMBER_ID}	 
									

		]]>
			
	</update>	
	
	<!--ID 찾기 정보 가져오기 확인-->
	<select id="selectFindIDOne" resultType="hashmap" parameterType="hashmap">
			
		<![CDATA[		
			 select 
			 	* 
			 from 
			 	Pet_Member 
			 where
			 	MEMBER_NAME = '${MEMBER_NAME}'	and
			 	MEMBER_TEL = '${MEMBER_TEL}' and
			 	MEMBER_EMAIL = '${MEMBER_EMAIL}'
			
		]]>
	</select>
	
	
	
	<!-- ID 찾기 있는지 여부-->
	<select id="selectFindIDCount" resultType="hashmap" parameterType="hashmap">
			
		<![CDATA[		
			 select 
			 	count(*) as count 
			 from 
			 	Pet_Member 
			 where
			 	MEMBER_NAME = '${MEMBER_NAME}'	and
			 	MEMBER_TEL = '${MEMBER_TEL}' and
			 	MEMBER_EMAIL = '${MEMBER_EMAIL}'
			
		]]>
	</select>
	
	
	
		
	<!--Pw 찾기 정보 가져오기 확인-->
	<select id="selectFindPwOne" resultType="hashmap" parameterType="hashmap">
			
		<![CDATA[		
			 select 
			 	* 
			 from 
			 	Pet_Member 
			 where
			 	MEMBER_ID = '${MEMBER_ID}'	and
			 	MEMBER_TEL = '${MEMBER_TEL}' and
			 	MEMBER_EMAIL = '${MEMBER_EMAIL}'
			
		]]>
	</select>
	
	
	
	<!-- ID 찾기 있는지 여부-->
	<select id="selectFindPwCount" resultType="hashmap" parameterType="hashmap">
			
		<![CDATA[		
			 select 
			 	count(*) as count 
			 from 
			 	Pet_Member 
			 where
			 	MEMBER_ID = '${MEMBER_ID}'	and
			 	MEMBER_TEL = '${MEMBER_TEL}' and
			 	MEMBER_EMAIL = '${MEMBER_EMAIL}'
			
		]]>
	</select>
	
	
	
	<!-- 회원 탈퇴 -->
	<update id="updateUserYN" parameterType="hashmap">
		<![CDATA[
			UPDATE 
				PET_MEMBER 
			SET 
				MEMBER_USERYN = #{MEMBER_USERYN}
			where
				MEMBER_ID = #{MEMBER_ID}	 
									

		]]>
			
	</update>	
	
	
	
	
</mapper>