<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="PetRoomReservationSQL">
	
	<sql id="seletClass" >
	<![CDATA[
	SELECT * FROM PET_ROOM_RESERVATION
	]]>
	</sql>
	
	<sql id="where-no"><![CDATA[ WHERE RES_NO = #{res_NO}]]></sql>
	
	<!-- 예약리스트(관리자용) -->
	<select id="selectAllList" resultType="hashmap" parameterType="hashmap">
		<![CDATA[
		select a.* from (
  		     select  
  		     		row_number() over(order by 	RES_NO DESC) as NO,
				 	RES_NO, ROOM_NO, RES_FIRSTDATE, RES_LASTDATE,
		  			MEMBER_ID, RES_PRICE, RES_REQUESTS, RES_STATE
			 from 
			 	PET_ROOM_RESERVATION ) a    
			 where 
			 	a.NO between ${PAGING}*( ${PAGINGNO} -1)+1 and ${PAGING}*( ${PAGINGNO} )
			 ORDER BY RES_NO DESC
		]]>
	</select>
	
	<!-- 예약리스트(고객용) -->
	<select id="selectUserList" parameterType="hashmap" resultType="hashmap">
		<![CDATA[
		select c.* from (
		SELECT
			  row_number() over(order by a.RES_NO DESC) as NO, a.RES_NO, a.ROOM_NO, a.RES_FIRSTDATE, a.RES_LASTDATE,
		  	   a.MEMBER_ID, a.RES_PRICE, a.RES_REQUESTS, a.RES_STATE, NVL(b.ROOM_NAME ,'')  as ROOM_NAME
		FROM PET_ROOM_RESERVATION a LEFT join PET_ROOM b on a.ROOM_NO = b.ROOM_NO
		WHERE MEMBER_ID = #{member_ID} and  res_state <> 2) c
		where 
			c.NO between ${PAGING}*( ${PAGINGNO} -1)+1 and ${PAGING}*( ${PAGINGNO} )
		 ORDER BY RES_NO DESC
		]]>
	</select>
	
	<!-- 룸 날짜로 가능 객실수 검색 -->
	<select id="searchDate" resultType="hashmap" parameterType="hashmap">
		<![CDATA[
		SELECT room_Total - (
		SELECT COUNT (res_NO) FROM (
  			SELECT res_NO FROM PET_ROOM_RESERVATION 	
			WHERE (res_FirstDate between #{res_FirstDate} and #{res_LastDate} or
			  res_LastDate between #{res_FirstDate} and #{res_LastDate} or
			  #{res_FirstDate} between res_FirstDate and res_LastDate or
			  #{res_LastDate} between res_FirstDate and res_LastDate)
			  and room_NO = #{room_NO}))
			as "NUM" FROM PET_ROOM
		WHERE room_NO = #{room_NO}
		
		]]>
	</select>
	
	<!-- 예약 추가 -->
	<insert id="insert" parameterType="hashmap">
		<![CDATA[
		INSERT INTO PET_ROOM_RESERVATION 
		( RES_NO, ROOM_NO, RES_FIRSTDATE, RES_LASTDATE,
		  MEMBER_ID, RES_PRICE, RES_REQUESTS, RES_STATE)
		VALUES ( PET_ROOM_RESERVATION_NO_SEQ.nextval, #{room_NO}, #{res_FirstDate},
		 #{res_LastDate}, #{member_ID}, #{res_Price}, #{res_Requests}, 0)
		
		]]>
	</insert>
	
	<!-- 예약상태 수정 -->
	<update id="resPayment" parameterType="hashmap">
		<![CDATA[
		UPDATE PET_ROOM_RESERVATION SET RES_STATE = #{res_State}
		]]>
		<include refid="where-no"/>
	</update>
	
	<!-- 예약 삭제 -->
	<delete id="delete" parameterType="hashmap">
		<![CDATA[
		DELETE FROM PET_ROOM_RESERVATION WHERE RES_NO = #{res_NO}
		]]>
	</delete>
	
	<!-- 예약 전체 갯수(admin) -->
	<select id="selectResAdminCount" resultType="hashmap">
			
		<![CDATA[		
			 select 
			 	count(*) as count 
			 from 
			 	PET_ROOM_RESERVATION 			
			
		]]>
	</select>
	
	<!-- 예약 전체 갯수(고객) -->
	<select id="selectResCount" parameterType="String" resultType="hashmap">
			
		<![CDATA[		
			 select 
			 	count(*) as count 
			 from 
			 	PET_ROOM_RESERVATION 
			 WHERE MEMBER_ID = #{member_ID} and  res_state <> 2			
			
		]]>
	</select>
	
</mapper>









<!--


	레프트 조인 ( null 값 처리로직 추가)
	 SELECT
			   a.RES_NO, a.ROOM_NO, a.RES_FIRSTDATE, a.RES_LASTDATE,
		  	   a.MEMBER_ID, a.RES_PRICE, a.RES_REQUESTS, a.RES_STATE, NVL(b.ROOM_NAME ,'')  as ROOM_NAME
		FROM PET_ROOM_RESERVATION a LEFT join PET_ROOM b on a.ROOM_NO = b.ROOM_NO 
		WHERE MEMBER_ID = 'utopiazn'
		ORDER BY RES_NO DESC
	
	
	

	레프트 조인	
     SELECT
			   a.RES_NO, a.ROOM_NO, a.RES_FIRSTDATE, a.RES_LASTDATE,
		  	   a.MEMBER_ID, a.RES_PRICE, a.RES_REQUESTS, a.RES_STATE, b.ROOM_NAME
		FROM PET_ROOM_RESERVATION a LEFT join PET_ROOM b on a.ROOM_NO = b.ROOM_NO 
		WHERE MEMBER_ID = 'utopiazn'
		ORDER BY RES_NO DESC
    


	서브쿼리
    SELECT
			   a.RES_NO, a.ROOM_NO, a.RES_FIRSTDATE, a.RES_LASTDATE,
		  	   a.MEMBER_ID, a.RES_PRICE, a.RES_REQUESTS, a.RES_STATE,(select ROOM_NAME from PET_ROOM b where b.ROOM_NO =  a.ROOM_NO ) as ROOM_NAME
		FROM PET_ROOM_RESERVATION a  
		WHERE MEMBER_ID = 'utopiazn'
		ORDER BY RES_NO DESC
		
	
	
	크로스 조인	
	SELECT
			   a.RES_NO, a.ROOM_NO, a.RES_FIRSTDATE, a.RES_LASTDATE,
		  	   a.MEMBER_ID, a.RES_PRICE, a.RES_REQUESTS, a.RES_STATE, b.ROOM_NAME
		FROM PET_ROOM_RESERVATION a, PET_ROOM b 
		WHERE a.MEMBER_ID = 'utopiazn' and a.ROOM_NO = b.ROOM_NO
		ORDER BY a.RES_NO DESC
     -->




